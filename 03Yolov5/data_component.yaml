# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
train: /root/autodl-tmp/yolov5/yolov5/city_data_component_zihui/data_R2_01/dataset/train.txt # train images (relative to 'path') 118287 images
val: /root/autodl-tmp/yolov5/yolov5/city_data_component_zihui/data_R2_01/dataset/val.txt # val images (relative to 'path') 5000 images
test: /root/autodl-tmp/yolov5/yolov5/city_data_component_zihui/data_R2_01/dataset/test.txt   # 20288 of 40670 images, submit to https://competitions.codalab.org/competitions/20794


# number of classes
nc: 17

# class names
names:
  0: Main Pilaster
  1: Secondary Pilaster  
  2: Long Window
  3: Casement Window
  4: Fanlight
  5: Modillion
  6: Festoon
  7: Chinese Plaque
  8: Green Glazed Tiles Canopy
  9: Chinese Decorative Panel
  10: Malay Transom
  11: Fretwork Fascia
  12: Majolica Tiles
  13: Stepping Parapet
  14: Modern Window
  15: Shades
  16: Building


  #0: Main Pilaster
  #1: Long Window
  #2: Secondary Pilaster
  #3: Fanlight
  #4: Building
  #5: Casement Window
  #6: Malay Transom
  #7: Chinese Plaque
  #8: Modern Window
  #9: Shades
  #10: Green Glazed Tiles Canopy
  #11: Tripart Window
  #12: Fretwork Fascia
  #13: Stepping Parapet
  #14: Majolica Tiles
  #15: Chinese Decorative Panel
  #16: Festoon
  #17: Modillion

  # Data Augmentation
augment: True
hsv_h: 0.015  # 色调增强
hsv_s: 0.7    # 饱和度增强
hsv_v: 0.4    # 亮度增强
degrees: 5.0   # 旋转角度 (+/- deg)
translate: 0.2  # 平移
scale: [0.5, 1.5]  # 缩放范围
shear: 0.5    # 错切
perspective: 0.0007  # 透视变换
flipud: 0.5   # 上下翻转概率
fliplr: 0.5   # 左右翻转概率

# Advanced Augmentation
mosaic: 1.0   # mosaic 增强概率
mixup: 0.3    # mixup 增强概率
copy_paste: 0.4  # copy-paste 概率
paste_in: 0.3    # 额外的paste增强

# 针对稀有类别的特殊增强
replicate_rare_classes: True  # 复制稀有类别样本
rare_class_weights: {13: 3.0}  # Stepping Parapet 的样本权重增加

# Anchors and Shapes
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# Image size
img_size: 1280  # 增大图像尺寸以捕获更多细节

# 训练超参数
epochs: 300  # 增加训练轮数
batch_size: 16  # 根据实际GPU内存调整
subdivisions: 1

# Loss weights
box: 0.05  # box 损失权重
cls: 0.5   # 分类损失权重
cls_pw: 1.0  # 分类正样本权重
obj: 1.0   # 目标损失权重
obj_pw: 1.0  # 目标正样本权重
iou_t: 0.20  # IoU 训练阈值
anchor_t: 4.0  # anchor-multiple 阈值

# 学习率设置
lr0: 0.01  # 初始学习率
lrf: 0.1   # 最终学习率=lr0*lrf
momentum: 0.937
weight_decay: 0.0005

# 预热设置
warmup_epochs: 3.0
warmup_momentum: 0.8
warmup_bias_lr: 0.1

# 特定类别的权重设置
class_weights:
  13: 3.0    # Stepping Parapet (稀有类别加权)
  11: 2.0    # Fretwork Fascia (另一个稀有类别)
  0: 1.2     # Main Pilaster
  1: 1.2     # Secondary Pilaster
  2: 1.2     # Long Window
  3: 1.2     # Casement Window
  4: 1.2     # Fanlight

# 多尺度训练
multi_scale: True
scales: [0.8, 1.0, 1.2]  # 图像缩放范围

# 其他训练策略
label_smoothing: 0.1
fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)
bucket: ''     # 使用 gsutil 支持

# 保存设置
save_period: 10  # 每隔多少epoch保存一次
save_best: True  # 保存最佳模型